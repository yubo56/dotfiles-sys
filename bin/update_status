#!/bin/bash

sep='|'
if [[ $(setxkbmap -query | grep 'variant') =~ "mac" ]]; then
    suffix=U
elif [[ $(setxkbmap -query | grep 'variant') =~ "dvorak-l" ]]; then
    suffix=L
else
    suffix=D
fi

#-------------------------------------------------------MEMSTATS--------------------------------------------
total=$(cat /proc/meminfo | grep MemTotal | sed -e 's/MemTotal://g' -e 's/kB//g' -e 's/ //g')
free=$(cat /proc/meminfo | grep MemFree | sed -e 's/MemFree://g' -e's/kB//g' -e 's/ //g')
mem=$(echo "scale=0;($total - $free)*100/$total" | 'bc')

#-------------------------------------------------------BATTSTATS--------------------------------------------
_battdir=/sys/class/power_supply/BAT0
if [[ -e $_battdir/status ]]; then
    read _battstat < $_battdir/status
    battstat=${_battstat:0:1}
    battperc=$(bc <<< "scale=1;100*$(cat $_battdir/charge_now)/$(cat $_battdir/charge_full)")
    batthealth=$(bc <<< "scale=1;100*$(cat $_battdir/charge_full)/$(cat $_battdir/charge_full_design)")
    # assume actually on battery power if discharging & battperc < 95
    # (sensor sometimes declares discharging when nearly full)
    if [[ $battstat = 'D' ]] && (( $battperc < 95 )); then
        batttime="${sep}($(acpi -b | awk '{print $5}'))"
    fi
    battAll="B:$battperc$battstat($batthealth)$temp${sep}"
fi


#-------------------------------------------------------VOLUME--------------------------------------------
vol=$(amixer get Master | grep 'Front Left:' | perl -e "my \$string = <>;print \"Mu\" if \$string =~ /off/;\$string =~ s/\[(\d+)%\]// if \$string =~ /\[on\]/;print \$1;")
vol2=$(amixer get Master | grep 'Mono:' | perl -e "my \$string = <>;print \"Mu\" if \$string =~ /off/;\$string =~ s/\[(\d+)%\]// if \$string =~ /\[on\]/;print \$1;")

#------------------------------------------------------BRIGHTNESS------------------------------------------
if [[ -f $brightfile ]]; then
    bright="D:$(echo "scale=0;$(cat $brightfile) * 100 / $(cat $brightmax)" | bc)${sep}"
fi


#-------------------------------------------------------SET INTERNET RELATED STUFF--------------------------------------------

#format weather string
if [[ -s /tmp/weather ]]; then
    weather="${sep}$(cat /tmp/weather)"
fi

#---------------------------------------------------------- TEMPERATURE ----------------------------------------------------------
if [[ -a /sys/devices/platform/coretemp.0 ]]; then
    read temp < /sys/devices/platform/coretemp.0/hwmon/hwmon*/temp1_input
    temp="${sep}T:${temp:0:-3}"
else temp=""
fi

#---------------------------------------------------------- SIGNAL STRENGTH QUALITY/LEVEL -----------------------------------------
if ! [[ $(iw dev $WIFI link) == 'Not connected.' ]]; then
    net="W:$(iw dev $WIFI link | grep signal | awk '{print $2}' | sed 's/\ //g')${sep}"
fi

#-------------------------------------------------------SET REPLY--------------------------------------------
REPLY="${sep}V:$vol$vol2${sep}M:$mem${sep}I:$(hostname -i | tr -d ' ')${weather}${batttime}"

xsetroot -name "$(cat /tmp/status)${REPLY} $(/home/yssu/bin/dateWeek)$(date +'%m/%d/%y %H:%M:%S')$suffix"
