#! /bin/zsh
### BLEND
### Put all blend-related stuff here so can source on OSTYPE

# use inside the if/else, but aliases can't be defined in the same block
alias blend_enospc='echo fs.inotify.max_user_watches=524288 | sudo tee /etc/sysctl.conf && sudo sysctl -p && touch /tmp/enospc_done'
# HACK: sudo on the echo so the second sudo, forked, doesn't require stdio
alias run_fand='sudo echo "Running fand"; sudo ~yssu/bin/fand > /tmp/fand &!'

if [[ $OSTYPE =~ "darwin" ]]; then
    export NVM_DIR="/Users/yssu/.nvm"
    alias blend_mongo='ulimit -n 10000 && rm -f ~/mongodb/data/db/mongod.lock &&\
        mongod --dbpath ~/mongodb/data/db > /dev/null&!'
    [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm

    # OS X settings
    defaults write com.apple.Dock autohide-delay -float 1000; killall Dock
    defaults write .GlobalPreferences com.apple.mouse.scaling -1
else
    export NVM_DIR="/home/yssu/.nvm"
    alias blend_mongo='ulimit -n 10000 -u 32768 &&\
        rm -f ~/mongodb/data/db/mongod.lock &&\
        mongod --dbpath ~/mongodb/data/db > /dev/null&!'
    alias mongo="mongo --eval \"var DOCUSIGN_PW=\\\"$(cat ~/.docusign_pw)\\\"\" --shell"
    alias fan_off='for i in {1..2}; do cat /sys/devices/platform/applesmc.768/fan${i}_min | sudo tee /sys/devices/platform/applesmc.768/fan${i}_output; done'

    echo 255 | sudo tee /sys/class/leds/smc::kbd_backlight/brightness > /dev/null
    if [[ ! -a /tmp/enospc_done ]]; then blend_enospc; fi
    [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm
    # if [[ ! -a /tmp/fand ]]; then run_fand; fi
fi
if [ ! -f /tmp/mongodb-27017.sock ]; then blend_mongo; fi

alias venv='source ~/blend/venv/bin/activate'
alias bfind="find . -not \( -path '*/vendor' -prune \) -not \( -path '*/node_modules' -prune \) -not \( -path '*/.git' -prune \) -not \( -path '*/venv' -prune \) -iname"

alias npt='npm test'
alias nps='npm run startNoRecompile'
alias enps='E2E_TEST=true BLEND_LOGGER_LEVEL=debug npm run startNoRecompile'
alias npts='clear; POOL_LIMIT=4 npm run testParallel -- --skip-style'
alias nptr='clear; npm run baseGrunt mochaTest:test'
alias gwc='grunt watchChokidar:lib'
alias blend_init_dev='mongo centrio <<< db.dropDatabase\(\) && fab init_dev'
alias shutdown='for i in node wpa_supplicant docker mongo openvpn chrome goldendict xscreensaver dhcpcd redshift yssu weatherLoop statusBar; do sudo pkill $i; done; sudo shutdown -P 0'
alias reboot='for i in node wpa_supplicant docker mongo openvpn chrome goldendict xscreensaver dhcpcd redshift yssu weatherLoop statusBar; do sudo pkill $i; done; sudo reboot'

alias docker_rm='docker rm `docker ps -a -q`'
alias docker_rmi='docker rmi `docker images --format "{{.ID}}"`'
alias docker_sizes='docker ps -a -s --format "table {{.ID}}\t{{.Size}}" &&
    docker images --format "{{.Repository}}\t{{.Tag}}\t{{.Size}}"'
alias docker_build_b='fab build_and_push_docker_images:backend'
alias blend_locks='git checkout origin/master -- $(git ls-files | '\''grep'\'' package-lock.json)'
alias blend_clrun='mongo centrio <<< "yubo_clear()" && npm test'
alias blend_cl='mongo centrio <<< "yubo_clear()"'

function blend_ansible() {
    sed "s/'/\"/g;s/u\"/\"/g;s/None/null/g;s/True/true/g;s/False/false/g" | \
    jq -C . | less
}

# alias blend_vpn='touch /tmp/devlog && sudo openvpn --log /tmp/devlog --config ~/.openvpn/dev_autologin.ovpn --daemon'
# alias blend_vpn_prod='touch /tmp/prodlog && sudo openvpn --log /tmp/prodlog --config ~/.openvpn/prod.ovpn --daemon'
# alias blend_vpn='blend_vpn_dev; blend_vpn_prod'
alias blend_vpn='pritunl-client stop 26e3518edca144d6b3b5693fa5f5e6fb; pritunl-client start 26e3518edca144d6b3b5693fa5f5e6fb --password'
alias blend_ssh='ssh-add ~/.ssh/blend_prod'
alias blend_rm_tmp='(cd /tmp && rm -rf tmpfile-* *118* npm-*)'
alias blend_iam='aws-vault exec iam --session-ttl=12h --backend=file'
alias blend_dev='aws-vault exec sandbox-dev --session-ttl=12h --backend=file'
alias blendq='for i in $(aws sqs list-queues --queue-name-prefix dev-yubo | jq -r ".QueueUrls | .[]"); do echo $i; aws sqs purge-queue --queue-url $i; done'
function ts_convert() {
    _CD=$(pwd)
    cd ~/ts-transform
    RENAME=RENAME sh convert_to_typescript.sh $_CD/$1
    ~/blend/node_modules/eslint/bin/eslint.js --fix $_CD/$1
    cd $_CD
    vim $1
}

export BLEND_LOGGER_LEVEL='debug'
export NODE_ENV=dev DEPLOYMENT=blend-borrower TENANT_LIST=blend-borrower
function run_api() {
    mongo centrio <<< "yubo_clear()"; while npt -- --grep=$1 && sleep 30s; do mongo centrio <<< "yubo_clear()"; done
}
